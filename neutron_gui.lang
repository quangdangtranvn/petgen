#lang ui_neutron_dashboard_v2:
layout: grid
theme: cyber_dark
rtx_mode: on
meta:
  title: "Neutron Brain Cypher RTX"
  author: "Quang"
  version: "2.1 TED Edition"

modules:
  - id: "neuro_panel"
    type: panel
    title: "üß† Module Status"
    rtx_shader: "cypher_lora_shader"
    display: table
    data:
      - { name: "NeuroInit", type: "CNN", layers: 12, status: "Trained" }
      - { name: "CoreLink", type: "Transformer", layers: 24, status: "Training" }
      - { name: "AxonMap", type: "RNN", layers: 8, status: "Pending" }

  - id: "search_bar"
    type: input
    placeholder: "T√¨m neuron, m√¥ h√¨nh, ho·∫∑c m√£ ng√¥n ng·ªØ..."
    icon: "üîç"
    rtx_accelerated: true
    onSubmit: net.petgenSearch()

  - id: "api_command_panel"
    type: buttons
    label: "‚ö° DOM8 Subcommands"
    buttons:
      - { text: "Init Brain", action: net.brainInit }
      - { text: "Status", action: net.brainStatus }
      - { text: "Reset", action: net.resetBrain }

class:
  lua:
    - id: "langParser"
      description: "Ph√¢n t√≠ch c√∫ ph√°p ng√¥n ng·ªØ .lang v√† ƒë·∫©y giao di·ªán"
      run: `
        function parseLang(input)
          if string.find(input, "Neuro") then
            return "K√≠ch ho·∫°t module AI: " .. input
          end
        end
      `

  net:
    - id: "petgenSearch"
      description: "G·ª≠i truy v·∫•n ƒë·∫øn PetGen Cipher"
      endpoint: "/api/petgen/search?q={input}"

    - id: "brainInit"
      description: "Kh·ªüi t·∫°o Neutron Brain"
      method: "POST"
      endpoint: "/brain/init"

    - id: "brainStatus"
      description: "Truy xu·∫•t tr·∫°ng th√°i"
      method: "GET"
      endpoint: "/brain/status"

    - id: "resetBrain"
      description: "ƒê·∫∑t l·∫°i m√¥ h√¨nh ƒë·ªÉ hu·∫•n luy·ªán m·ªõi"
      method: "DELETE"
      endpoint: "/brain/reset"

footer:
  text: "¬© 2025 Neutron Brain RTX ‚Äì Created with ‚ù§Ô∏è by Quang"